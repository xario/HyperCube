{"version":3,"sources":["fetchWithTimeout.ts","App.tsx","theme.ts","index.tsx"],"names":["url","options","timeout","controller","AbortController","setTimeout","abort","signal","fetch","SideMaker","name","clockify","ClockifyTimerConfigMaker","apiKey","workspaceId","projectId","taskId","taskDesc","TabPanel","props","children","value","index","other","role","hidden","id","Box","p","Typography","component","App","hostname","location","React","data","setData","socket","setSocket","updateState","forceUpdate","tick","updateData","a","d","apiKeys","sides","Object","forEach","side","key","json","JSON","stringify","method","body","connectInterval","socketInit","socketConnected","dataLoaded","getData","res","Map","entries","console","log","getWSToken","then","openWebsocketConnection","token","newUri","uri","substring","indexOf","s","WebSocket","pingTimeout","onmessage","msg","sideId","currentSide","handleClockifyTimerDialogClose","setCurrentSide","has","set","create","clearTimeout","onerror","onclose","onopen","setInterval","send","close","setValue","badApiKey","setBadApiKey","selectedApiKey","setSelectedApiKey","resetWorkspaces","setSelectedWorkspace","setWorkspaces","Array","resetProjects","workspaces","badWorkspace","setBadWorkspace","selectedWorkspace","setSelectedProject","defaultProjectOption","setProjects","defaultProjectOptions","resetTasks","label","projects","badProject","setBadProject","selectedProject","setSelectedTask","setTasks","tasks","selectedTask","badDescription","setBadDescription","taskDescription","setTaskDescription","addingKey","setAddingKey","keyError","setKeyError","addKey","event","newKey","isKeyValid","showError","push","setNewKey","showSuccess","keyIdToBeDeleted","setKeyIdToBeDeleted","deleteKey","splice","i","length","setDeleteApiKeyDialogOpen","headers","response","status","catch","error","resetWifi","window","reload","factoryReset","fetchWorkspaces","r","fetchProjects","map","el","unshift","fetchTasks","clockifyTimerEditingId","setClockifyTimerEditingId","clockifyTimerEditDialogOpen","setClockifyTimerEditDialogOpen","resetClockifyTimerForm","handleClockifyTimerEdit","configId","get","config","filteredProjects","filter","handleClockifyTimerAdd","handleAccordionChange","expanded","preventDefault","stopPropagation","setNewSideName","newSideName","handleSideNameClick","enqueueSnackbar","useSnackbar","showAlert","message","variant","deleteApiKeyDialogOpen","handleDeleteApiKeyDialogClose","resetWifiDialogOpen","setResetWifiDialogOpen","handleResetWifiDialogClose","factoryResetDialogOpen","setFactoryResetDialogOpen","handleFactoryResetDialogClose","downloadFile","fileName","blob","Blob","type","URL","createObjectURL","href","link","document","createElement","download","appendChild","click","removeChild","Container","maxWidth","Tabs","onChange","newValue","centered","Tab","Card","raised","CardContent","Stack","spacing","Link","target","rel","List","ListItem","divider","secondaryAction","IconButton","edge","onClick","TextField","size","fullWidth","Button","sx","display","accept","style","e","fileReader","FileReader","readAsText","files","onload","parse","result","toString","htmlFor","width","marginBottom","Accordion","disabled","AccordionSummary","AccordionDetails","Paper","alignItems","height","InputBase","ml","flex","placeholder","inputProps","timer","ListItemText","primary","handleClockifyTimerDelete","Dialog","open","onClose","PaperProps","overflowY","DialogTitle","DialogContent","FormControl","margin","InputLabel","Select","defaultValue","MenuItem","Autocomplete","disablePortal","disableClearable","isOptionEqualToValue","option","renderInput","params","limitTags","DialogActions","b","valid","timerConfig","validateClockifyTimerForm","storeClockifyTimerConfig","fullScreen","DialogContentText","autoFocus","theme","createTheme","breakpoints","values","xs","sm","md","lg","xl","palette","mode","main","secondary","red","A400","components","MuiPaper","styleOverrides","root","transition","Fade","ReactDOM","render","ThemeProvider","CssBaseline","maxSnack","TransitionComponent","querySelector"],"mappings":"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","file":"static/js/main.8f59df71.chunk.js","sourcesContent":["export default function (url: RequestInfo, options?: RequestInit, timeout = 1000): Promise<Response> {\n    const controller = new AbortController();\n    setTimeout(() => controller.abort(), timeout);\n    if (!options) {\n        options = {};\n    }\n    options.signal = controller.signal;\n    return fetch(url, options);\n}","import * as React from 'react';\nimport fetch from './fetchWithTimeout'\nimport Container from '@mui/material/Container';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Box from '@mui/material/Box';\nimport Link from '@mui/material/Link';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport List from '@mui/material/List';\nimport ListItemText from '@mui/material/ListItemText';\nimport DialogContentText from '@mui/material/DialogContentText';\n\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport CheckIcon from '@mui/icons-material/Check';\nimport EditIcon from '@mui/icons-material/Edit';\n\nimport MenuItem from '@mui/material/MenuItem';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Stack from '@mui/material/Stack';\nimport { ListItem } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\n\nimport Paper from '@mui/material/Paper';\nimport InputBase from '@mui/material/InputBase';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { VariantType, useSnackbar } from 'notistack';\n\ninterface Data {\n  apiKeys: ApiKeys;\n  sides: Map<string, Side>;\n}\ninterface ApiKeys {\n  clockify?: (string)[];\n  jira: string;\n}\ninterface Side {\n  name: string;\n  clockify: ClockifyTimerConfig[];\n}\n\ninterface ClockifyTimerConfig {\n  apiKey: string;\n  workspaceId: string;\n  projectId: string;\n  taskId: string;\n  taskDesc: string;\n}\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: any;\n  value: any;\n}\n\nexport interface Workspace {\n  hourlyRate:        HourlyRate;\n  id:                string;\n  imageUrl:          string;\n  memberships:       Membership[];\n  name:              string;\n  workspaceSettings: WorkspaceSettings;\n}\n\nexport interface HourlyRate {\n  amount:   string;\n  currency: string;\n}\n\nexport interface Membership {\n  hourlyRate:       HourlyRate;\n  membershipStatus: string;\n  membershipType:   string;\n  targetId:         string;\n  userId:           string;\n}\n\nexport interface WorkspaceSettings {\n  adminOnlyPages:                     any[];\n  automaticLock:                      AutomaticLock;\n  canSeeTimeSheet:                    string;\n  canSeeTracker:                      string;\n  defaultBillableProjects:            string;\n  forceDescription:                   string;\n  forceProjects:                      string;\n  forceTags:                          string;\n  forceTasks:                         string;\n  lockTimeEntries:                    Date;\n  onlyAdminsCreateProject:            string;\n  onlyAdminsCreateTag:                string;\n  onlyAdminsCreateTask:               string;\n  onlyAdminsSeeAllTimeEntries:        string;\n  onlyAdminsSeeBillableRates:         string;\n  onlyAdminsSeeDashboard:             string;\n  onlyAdminsSeePublicProjectsEntries: string;\n  projectFavorites:                   string;\n  projectGroupingLabel:               string;\n  projectPickerSpecialFilter:         string;\n  round:                              Round;\n  timeRoundingInReports:              string;\n  trackTimeDownToSecond:              string;\n  isProjectPublicByDefault:           string;\n  featureSubscriptionType:            string;\n}\n\nexport interface AutomaticLock {\n  changeDay:       string;\n  dayOfMonth:      string;\n  firstDay:        string;\n  olderThanPeriod: string;\n  olderThanValue:  string;\n  type:            string;\n}\n\nexport interface Round {\n  minutes: string;\n  round:   string;\n}\n\nexport interface Project {\n  id:             string;\n  name:           string;\n  hourlyRate:     null;\n  clientId:       string;\n  workspaceId:    string;\n  billable:       boolean;\n  memberships:    Membership[];\n  color:          string;\n  estimate:       Estimate;\n  archived:       boolean;\n  duration:       string;\n  clientName:     string;\n  note:           string;\n  template:       boolean;\n  public:         boolean;\n  costRate:       null;\n  budgetEstimate: null;\n  timeEstimate:   TimeEstimate;\n}\n\nexport interface Estimate {\n  estimate: string;\n  type:     string;\n}\n\nexport interface TimeEstimate {\n  estimate:    string;\n  type:        string;\n  resetOption: null;\n  active:      boolean;\n}\n\nexport interface Task {\n  assigneeIds: string[];\n  estimate:    string;\n  id:          string;\n  name:        string;\n  projectId:   string;\n  billable:    string;\n  hourlyRate:  Rate;\n  costRate:    Rate;\n  status:      string;\n}\n\nexport interface Rate {\n  amount:   string;\n  currency: string;\n}\n\nexport interface ProjectOption {\n  label: string;\n  id: string;\n}\n\nclass SideMaker {\n  static create(): Side {\n    return { name: \"new side\", clockify: [] };\n  }\n}\n\nclass ClockifyTimerConfigMaker {\n  static create(apiKey: string,  workspaceId: string, projectId: string, taskId: string, taskDesc: string): ClockifyTimerConfig {\n    return { \n      apiKey: apiKey, \n      workspaceId: workspaceId,\n      projectId: projectId,\n      taskId: taskId !== \"-\" ? taskId : \"\",\n      taskDesc: taskDesc \n    };\n  }\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography component=\"span\">{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nexport default function App() {\n  const hostname = location.hostname;\n  //const hostname = \"192.168.200.199\";\n\n  const [data, setData]= React.useState<Data | null>(null);\n  const [socket, setSocket]= React.useState<WebSocket | null>(null);\n\n  const [, updateState] = React.useState(0);\n  const forceUpdate = React.useCallback(() => updateState((tick) => tick + 1), []);\n    \n  async function updateData(data: Data | null) {\n    let d = {\n      apiKeys: data?.apiKeys,\n      sides: Object()\n    };\n    \n    data?.sides?.forEach((side: Side, key: string) => {\n      d.sides[key] = side;\n    });\n\n    const json = JSON.stringify(d);\n    await fetch('http://' + hostname + '/data', {\n      method: 'POST',\n      body: json\n    });\n\n    setData(data);\n  }\n\n  let connectInterval: NodeJS.Timer = null;\n  let socketInit = false;\n  let socketConnected = false;\n  let dataLoaded = false;\n\n  React.useEffect(() => {\n    async function getData() {\n      if (data || dataLoaded) {\n        return;\n      }\n      \n      try {\n        const res = await fetch('http://' + hostname + '/data');\n        const d: Data = await res.json();\n        const m = new Map<string, Side>();\n        d.sides = new Map(Object.entries(d.sides));\n        setData(d);\n        dataLoaded = true;\n      } catch(e) {\n        console.log(e);\n      }      \n    }\n\n    async function getWSToken() {\n      try {\n        let res = await fetch('http://' + hostname + '/token', {\n          method: \"GET\",\n        }).then(res => res.json());\n    \n        return res[\"token\"];\n      } catch(e) {\n        console.log(e);\n      }      \n    }\n    \n    async function openWebsocketConnection() {\n      if (socket != null || socketInit || socketConnected || !data) {\n        return;\n      }\n\n      let token = await getWSToken();\n      if (!token) {\n        return;\n      }\n\n      socketInit = true;\n      \n      let uri = 'ws://' + hostname + ':81/';\n      let newUri = uri.substring(0, uri.indexOf(\"//\") + 2) + token + '@' + uri.substring(uri.indexOf(\"//\") + 2);\n      let s = new WebSocket(newUri);\n      let pingTimeout = null;\n      s.onmessage = function (msg) {\n        if (msg.data === \"pong\") {\n          clearTimeout(pingTimeout);\n          return;\n        }\n    \n        let sideId: string = msg.data;\n        if (currentSide !== sideId) {        \n          handleClockifyTimerDialogClose();\n        }      \n        setCurrentSide(sideId);\n    \n        if (sideId !== \"\")  {\n          if (!data.sides.has(sideId)) {\n            data.sides.set(sideId, SideMaker.create());\n            updateData(data);\n            forceUpdate();\n          }\n        }\n      };;\n\n      s.onerror = function() {\n        socketConnected = false;\n        socketInit = false;\n        setSocket(null);\n      };\n\n      s.onclose = function() {\n        socketConnected = false;\n        socketInit = false;\n        setSocket(null);\n      };\n\n      s.onopen = function() {\n        setInterval(() => {\n          s.send(\"ping\");\n          pingTimeout = setTimeout(() => {\n            s.close();\n          }, 4000);\n        }, 5000);        \n        socketInit = false;\n        socketConnected = true;\n      };\n\n      setSocket(s);\n    }\n\n    if (!connectInterval) {\n      getData();    \n      connectInterval = setInterval(async function() {\n        await getData();\n        await openWebsocketConnection();    \n      }, 2000);\n    }\n  }, [data]);\n\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event: React.SyntheticEvent, newValue: number) => {\n    setValue(newValue);\n  };\n\n  const [checked, setChecked] = React.useState([true, false]);\n  \n  const [badApiKey, setBadApiKey] = React.useState(false);\n  const [selectedApiKey, setSelectedApiKey] = React.useState('-');\n  const handleApiKeySelectChange = (event: SelectChangeEvent) => {\n    let key = event.target.value;\n    setSelectedApiKey(key);\n    resetWorkspaces();\n    if (key !== \"-\") {\n      fetchWorkspaces(key);\n    }\n  };\n\n  const resetWorkspaces = () => {\n    setSelectedWorkspace(\"-\");\n    setWorkspaces(Array<Workspace>());\n    resetProjects();\n  };\n\n  const [workspaces, setWorkspaces] = React.useState(Array<Workspace>());\n  const [badWorkspace, setBadWorkspace] = React.useState(false);\n  const [selectedWorkspace, setSelectedWorkspace] = React.useState('-');\n  const handleWorkspaceSelectChange =  (event: SelectChangeEvent) => {\n    let workspaceId = event.target.value;\n    setSelectedWorkspace(workspaceId);\n    resetProjects();\n    if (workspaceId !== \"-\") {\n      fetchProjects(selectedApiKey, workspaceId);\n    }\n  };\n\n  const resetProjects = () => {\n    setSelectedProject(defaultProjectOption);\n    setProjects(defaultProjectOptions);\n    resetTasks();\n  };\n\n  const defaultProjectOption: ProjectOption = {label: '-', id: '-'};\n  const defaultProjectOptions: Array<ProjectOption> = [defaultProjectOption];\n  const [projects, setProjects] = React.useState(defaultProjectOptions);\n  const [badProject, setBadProject] = React.useState(false);\n  const [selectedProject, setSelectedProject] = React.useState(defaultProjectOption);\n  const handleProjectSelectChange = (event: React.SyntheticEvent, target: any) => {\n    if (target === null) {\n      resetTasks();\n      return;\n    }\n\n    let option: ProjectOption = target;\n    setSelectedProject(option);\n    resetTasks();\n    if (option.id !== \"-\") {\n      fetchTasks(selectedApiKey, selectedWorkspace, option.id); \n    }\n  };\n\n  const resetTasks = () => {\n    setSelectedTask(\"-\");\n    setTasks(Array<Task>());\n  };\n\n  const [tasks, setTasks] = React.useState(Array<Task>());\n  const [selectedTask, setSelectedTask] = React.useState('-');\n  const handleTaskSelectChange = (event: SelectChangeEvent) => {\n    let taskId = event.target.value;\n    setSelectedTask(taskId);\n  };\n\n  const [badDescription, setBadDescription] = React.useState(false);\n  const [taskDescription, setTaskDescription] = React.useState('');\n\n  const validateClockifyTimerForm = () => {\n    let valid = true;\n    let b: boolean;\n    \n    if (b = (selectedApiKey === '-')) {\n      showError(\"API key not selected!\");\n      valid = false;\n    }\n\n    if (!data) {\n      showError(\"Data not loaded!\");\n      return false;\n    }\n\n    const side = data.sides.get(currentSide);\n      if (side) {\n        side.clockify.forEach((timerConfig: ClockifyTimerConfig, id: number) => {\n          if (timerConfig.apiKey === selectedApiKey && id !== clockifyTimerEditingId) {\n            valid = false\n            b = true;\n            showError(\"API key already used in other config on this side!\");\n          }\n        });\n      }\n    setBadApiKey(b);\n\n    if (b = (selectedWorkspace === '-')) {\n      showError(\"Workspace not selected!\");\n      valid = false;\n    }\n    setBadWorkspace(b);\n\n    if (b = (selectedProject.label === \"-\")) {\n      showError(\"Project not selected!\");\n      valid = false;\n    }\n    setBadProject(b);\n\n    if (b = (taskDescription === '')) {\n      showError(\"No description entered!\");\n      valid = false;\n    }\n    setBadDescription(b);\n\n    return valid;\n  };\n\n  const [addingKey, setAddingKey] = React.useState(false);\n  const onAddKey = (event: React.MouseEvent) => {\n    setAddingKey(true);\n  };\n\n  const [keyError, setKeyError] = React.useState(false)\n\n  const addKey = async (event: React.MouseEvent) => {\n    if (data && data.apiKeys.clockify && data.apiKeys.clockify.indexOf(newKey) > -1) {\n      setKeyError(true);\n      return;\n    }\n\n    if (!await isKeyValid(newKey)) {\n      setKeyError(true);\n      showError(\"Bad API key!\")\n      return;\n    }\n\n    setKeyError(false);\n    setAddingKey(false);\n    if (data != null) {\n      data.apiKeys.clockify?.push(newKey);\n    }\n\n    updateData(data);\n    setNewKey(\"\");\n    showSuccess(\"API key added!\")\n  };\n\n  const [keyIdToBeDeleted, setKeyIdToBeDeleted] = React.useState(-1)\n  const showApiKeyDeleteDialog = (keyId: number) => {\n    setKeyIdToBeDeleted(keyId);\n    setDeleteApiKeyDialogOpen(true);\n  };\n\n  const deleteKey = async () => {\n    if (data == null || data.apiKeys.clockify == null) {\n      return;\n    }\n    \n\n    const key = data.apiKeys.clockify[keyIdToBeDeleted];\n    data.apiKeys.clockify?.splice(keyIdToBeDeleted, 1);\n    data.sides.forEach((side) => {\n      for (let i = 0; i < side.clockify.length; i++) {\n        let c = side.clockify[i];\n        if (c.apiKey === key) {\n          side.clockify.splice(i, 1);\n        }\n      }\n    });\n\n    updateData(data);\n    forceUpdate();\n    showSuccess(\"API key deleted!\")\n    setDeleteApiKeyDialogOpen(false);\n    setKeyIdToBeDeleted(-1);\n  };\n\n  const [newKey, setNewKey] = React.useState(\"\");\n\n  const isKeyValid = async (key:string) => {\n    let res = true;\n    await fetch('https://api.clockify.me/api/v1/user', {\n      method: 'GET',\n      headers: {\n        'X-Api-Key': key,\n        'Content-Type': 'application/json'\n      }\n    }).then((response) => {\n      res = response.status < 400;\n    }).catch((error) => {\n      res = false;\n    });\n\n    return res;\n  }\n\n  const onResetWifi = (event: React.MouseEvent) => {\n    setResetWifiDialogOpen(true);\n  };\n\n  const resetWifi = async (event: React.MouseEvent) => {\n    await fetch('http://' + hostname + '/wifi', {\n      method: 'DELETE'\n    });\n    showSuccess(\"WiFi configation reset\");\n    window.location.reload();\n  };\n\n  const onFactoryReset = (event: React.MouseEvent) => {\n    setFactoryResetDialogOpen(true);\n  };\n\n  const factoryReset = async (event: React.MouseEvent) => {\n    await fetch('http://' + hostname + '/reset', {\n      method: 'POST'\n    });\n    showSuccess(\"Factory reset completed\");\n    window.location.reload();\n  };\n\n  const fetchWorkspaces = async (key: string) => {\n    let res = await fetch('https://api.clockify.me/api/v1/workspaces', {\n      method: 'GET',\n      headers: {\n        'X-Api-Key': key,\n        'Content-Type': 'application/json'\n      }\n    }).then(r => r.json());\n\n    setWorkspaces(res);\n  }\n\n  const fetchProjects = async (apiKey: string, workspaceId: string) => {\n    let res = await fetch('https://api.clockify.me/api/v1/workspaces/' + workspaceId + '/projects?page-size=1000', {\n      method: 'GET',\n      headers: {\n        'X-Api-Key': apiKey,\n        'Content-Type': 'application/json'\n      }\n    }).then(r => r.json());\n\n    let projects: Array<Project> = res;\n    let options: Array<ProjectOption> = projects.map(el => ({id: el.id, label: el.name}))\n    options.unshift(defaultProjectOption);\n    setProjects(options);\n\n    return options;\n  }\n\n  const fetchTasks = async (apiKey: string, workspaceId: string, projectId: string) => {\n    let res = await fetch('https://api.clockify.me/api/v1/workspaces/' + workspaceId + '/projects/' + projectId + '/tasks?page-size=1000', {\n      method: 'GET',\n      headers: {\n        'X-Api-Key': apiKey,\n        'Content-Type': 'application/json'\n      }\n    }).then(r => r.json());\n\n    setTasks(res);\n\n    return res;\n  }\n\n  const [currentSide, setCurrentSide] = React.useState(\"\");\n\n  const [clockifyTimerEditingId, setClockifyTimerEditingId] = React.useState(-1);\n\n  const [clockifyTimerEditDialogOpen, setClockifyTimerEditDialogOpen] = React.useState(false);\n\n  const resetClockifyTimerForm = () => {\n    setBadApiKey(false);\n    setBadWorkspace(false);\n    setBadProject(false);\n    setBadDescription(false);\n    setSelectedApiKey(\"-\");\n    setSelectedWorkspace(\"-\");\n    setSelectedProject(defaultProjectOption);\n    setSelectedTask(\"-\");\n    setTaskDescription(\"\");\n  };\n\n  const handleClockifyTimerEdit = async (configId: number) => {\n    if (!data) {\n      return false;\n    }\n\n    const side = data.sides.get(currentSide);\n    if (!side) {\n      return false;\n    }\n\n    const config: ClockifyTimerConfig = side.clockify[configId];\n    console.log(config);\n    setClockifyTimerEditingId(configId);\n\n    resetClockifyTimerForm();\n    setSelectedApiKey(config.apiKey);\n    await fetchWorkspaces(config.apiKey);\n\n    setSelectedWorkspace(config.workspaceId);\n    let projects = await fetchProjects(config.apiKey, config.workspaceId);\n    const filteredProjects = projects.filter((value, index) => {\n      return value.id === config.projectId;\n    });\n    if (filteredProjects.length > 0) {\n      setSelectedProject(filteredProjects[0]);\n\n      await fetchTasks(config.apiKey, config.workspaceId, config.projectId);\n      setSelectedTask(config.taskId == '' ? '-' : config.taskId);  \n    }    \n\n    setTaskDescription(config.taskDesc);\n\n    setClockifyTimerEditDialogOpen(true);\n  };\n\n  const handleClockifyTimerDelete = (configId: number) => {\n    if (!data) {\n      return false;\n    }\n\n    const side = data.sides.get(currentSide);\n    if (!side) {\n      return false;\n    }\n    \n    side.clockify.splice(configId, 1);\n    data.sides.set(currentSide, side);\n    forceUpdate();\n    updateData(data);\n    showSuccess(\"Config deleted!\");\n  };\n\n  const handleClockifyTimerDialogClose = () => {\n    setClockifyTimerEditingId(-1);\n    setClockifyTimerEditDialogOpen(false);\n  };\n\n  const storeClockifyTimerConfig = () => {\n    if (!data) {\n      return false;\n    }\n\n    const side = data.sides.get(currentSide);    \n    if (!side) {\n      return false;\n    }\n\n    const config = ClockifyTimerConfigMaker.create(\n      selectedApiKey,\n      selectedWorkspace,\n      selectedProject.id,\n      selectedTask,\n      taskDescription\n    );\n\n    if (clockifyTimerEditingId >= 0) {\n      side.clockify[clockifyTimerEditingId] = config;\n    } else {\n      side.clockify.push(config);\n    }\n\n    updateData(data);\n    setClockifyTimerEditingId(-1);\n  };\n\n  const handleClockifyTimerDialogSave = (event: React.MouseEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    if (!validateClockifyTimerForm()) {      \n      return false;\n    }\n\n    setClockifyTimerEditDialogOpen(false);\n    storeClockifyTimerConfig();\n  };\n\n  const handleClockifyTimerAdd = () => {\n    setClockifyTimerEditingId(-1);\n    resetClockifyTimerForm();\n    setClockifyTimerEditDialogOpen(true);\n  };\n\n  const handleAccordionChange = (event: React.SyntheticEvent, expanded: boolean) => {    \n    event.preventDefault();\n    event.stopPropagation();\n\n    if (expanded && data) {\n      const side = data.sides.get(currentSide);\n      if (!side) {\n        showError(\"Side not configured!\");\n        return;\n      }\n\n      setNewSideName(side.name);\n    }\n  }\n\n  const [newSideName, setNewSideName] = React.useState(\"\");\n\n  const handleSideNameClick = (event: React.MouseEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (!data) {\n      showError(\"Data not loaded!\");\n      return;\n    }\n    \n    const side = data.sides.get(currentSide);\n    if (!side) {\n      showError(\"Side not configured!\");\n      return;\n    }\n\n    side.name = newSideName;\n    forceUpdate();\n    showSuccess(\"Side name updated!\");\n  }\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const showAlert = (message: string, variant: VariantType) => {\n    enqueueSnackbar(message, { variant });\n  };\n  \n  const showSuccess = (message: string) => {\n    showAlert(message, 'success');\n  };\n\n  const showError = (message: string) => {\n    showAlert(message, 'error');\n  };\n\n  const showWarning = (message: string) => {\n    showAlert(message, 'warning');\n  };\n\n  const showInfo = (message: string) => {\n    showAlert(message, 'info');\n  };\n\n  const [deleteApiKeyDialogOpen, setDeleteApiKeyDialogOpen] = React.useState(false);\n\n  const handleDeleteApiKeyDialogClose = () => {\n    setDeleteApiKeyDialogOpen(false);\n  };\n\n  const [resetWifiDialogOpen, setResetWifiDialogOpen] = React.useState(false);\n\n  const handleResetWifiDialogClose = () => {\n    setResetWifiDialogOpen(false);\n  };\n\n  const [factoryResetDialogOpen, setFactoryResetDialogOpen] = React.useState(false);\n\n  const handleFactoryResetDialogClose = () => {\n    setFactoryResetDialogOpen(false);\n  };\n\n  const downloadFile = async () => {\n    const fileName = \"data\";\n    let d = {\n      apiKeys: data?.apiKeys,\n      sides: Object()\n    };\n    \n    data?.sides.forEach((side: Side, key: string) => {\n      d.sides[key] = side;\n    });\n\n    const json = JSON.stringify(d);\n    const blob = new Blob([json],{type:'application/json'});\n    const href = await URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = href;\n    link.download = fileName + \".json\";\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  const uploadFile = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const fileReader = new FileReader();\n    fileReader.readAsText(e.target.files[0], \"UTF-8\");\n    fileReader.onload = e => {\n      let d: Data = JSON.parse(e.target.result.toString())\n      d.sides = new Map(Object.entries(d.sides));\n      updateData(d);\n      forceUpdate();\n    };\n  };\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Tabs value={value} onChange={handleChange} centered>\n        <Tab label=\"API keys\" />\n        <Tab label=\"General config\" />\n        <Tab label=\"Cube config\" />\n      </Tabs>\n      <TabPanel value={value} index={0}>\n      <Card raised>\n        <CardContent>\n          <Stack spacing={2}>\n            <Typography variant=\"h6\">Clockify API keys</Typography>\n            <Typography>Go to <Link href=\"https://clockify.me/user/settings#:~:text=API\" target=\"_blank\" rel=\"noreferrer\">https://clockify.me/user/settings</Link> to generate a new API key (bottom of page).</Typography>\n            <Typography>Multiple API keys can be added to enable time tracking in parallel across multiple accounts and projects.</Typography>\n            <List>\n              {data ? data.apiKeys.clockify?.map((apiKey, i) => (\n              <ListItem\n                  key={i}\n                  divider\n                  secondaryAction={                      \n                    <IconButton key={i} edge=\"end\" aria-label=\"delete\" onClick={() => showApiKeyDeleteDialog(i)}>\n                      <DeleteIcon key={i} />\n                    </IconButton>\n                  }\n                >\n                <Typography key={i}>{apiKey}</Typography>\n              </ListItem>         \n              )) : \n              <ListItem key=\"loading\" divider>\n                <Typography>Loading</Typography>\n              </ListItem>} \n              {addingKey ? <ListItem\n                  key=\"adding\"\n                  divider\n                  secondaryAction={\n                    <IconButton edge=\"end\" aria-label=\"add key\" onClick={addKey}>\n                      <CheckIcon />\n                    </IconButton>\n                  }\n                >\n                  <TextField\n                    size=\"small\"\n                    fullWidth\n                    error={keyError}\n                    label= \"API key\"\n                    onChange={event => setNewKey(event.target.value)}\n                  />\n              </ListItem>\n              : \"\"}\n            </List>\n            <Button sx={{display: addingKey ? 'none': 'inherit'}} variant=\"outlined\" size=\"large\" onClick={onAddKey}>Add new API key</Button>\n          </Stack>\n        </CardContent>\n      </Card>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <Stack spacing={2}>\n          <Card raised>\n            <CardContent>\n              <Stack spacing={2}>\n                <Typography variant=\"h6\">WiFi config</Typography>\n                <Button variant=\"outlined\" size=\"large\" onClick={onResetWifi}>Reset WiFi</Button>\n                <Typography>This will erase any saved WiFi configurations and reset the current connection. When the base tries to reconnect, it will launch an access point (AP) to allow addtion of new WiFi configurations.</Typography>\n              </Stack>\n            </CardContent>\n          </Card>\n          <Card raised>\n            <CardContent>\n              <Stack spacing={2}>\n                <Typography variant=\"h6\">Factory reset</Typography>\n                <Button variant=\"outlined\" size=\"large\" onClick={onFactoryReset}>Factory reset</Button>\n                <Typography>This will erase all saved configuration, including WiFi credentials.</Typography>\n              </Stack>\n            </CardContent>\n          </Card>\n          <Card raised>\n            <CardContent>\n              <Stack spacing={2}>\n                <Typography variant=\"h6\">Config</Typography>\n                <Button variant=\"outlined\" size=\"large\" onClick={downloadFile}>Download</Button>\n                <Typography>Download a copy of the current cube configuration.</Typography>\n                <input\n                  accept=\"application/json\"\n                  style={{ display: 'none' }}\n                  id=\"raised-button-file\"\n                  type=\"file\"\n                  onChange={uploadFile}\n                />\n                <label htmlFor=\"raised-button-file\">\n                  <Button variant=\"outlined\" size=\"large\" style={{ width: '100%' }} component=\"span\">\n                    Upload\n                  </Button>\n                </label>\n                <Typography>Upload a saved copy to replace the current cube configuration.</Typography>\n              </Stack>\n            </CardContent>\n          </Card>\n        </Stack>\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <Stack spacing={2}>\n          <Card raised>\n            <CardContent>\n              <Stack spacing={2}>\n                <Typography variant=\"h6\">How to configure</Typography>\n                <Typography>This section is for configuring actions occouring when a cube is placed on the base. Each side of the cube can be configured. In order to configure a side, place it on the base facing up. When the cube is placed, the releated configuration will expand in the accordion below. If the side has not been previously configured a new section will be created.</Typography>\n              </Stack>\n            </CardContent>\n          </Card>          \n          <Card raised>\n            <CardContent>\n              <Typography variant=\"h6\" marginBottom={2}>Cube sides</Typography>\n              {data ? data.sides.size ? [...data.sides].map(([key, side]) => (\n              <Accordion key={\"a\" + key} disabled={true} expanded={currentSide === key} onChange={handleAccordionChange}>\n              <AccordionSummary key={\"as\" + key}>\n                <Typography>{side.name}</Typography>\n              </AccordionSummary>\n              <AccordionDetails key={\"ad\" + key}>\n                <Stack spacing={1}>\n                  <Card raised>\n                    <CardContent>\n                      <Stack spacing={2}>\n                        <Typography variant=\"h6\">Side name</Typography>\n                        <Paper\n                          component=\"form\"\n                          sx={{ p: '2px 4px', display: 'flex', alignItems: 'center', height: '40px' }}\n                        >\n                          <InputBase\n                            sx={{ ml: 1, flex: 1 }}\n                            placeholder=\"Enter name of side\"\n                            onChange={(event) => setNewSideName(event.target.value)}\n                            inputProps={{ 'aria-label': 'Name', 'defaultValue': side.name, 'label': 'Name' }}\n                          />\n                          <IconButton type=\"submit\" sx={{ p: '10px', display: side.name === newSideName || newSideName === \"\" ? \"none\" : \"inherit\" }} aria-label=\"save\" onClick={handleSideNameClick}>\n                            <CheckIcon/>\n                          </IconButton>\n                        </Paper>\n                        <Typography>This helps identifying if the correct side has been located. The name can reflect the text written on the side of the cube.</Typography>\n                      </Stack>\n                    </CardContent>\n                  </Card>\n                  <Card raised>\n                    <CardContent>\n                      <Stack spacing={2}>\n                        <Typography variant=\"h6\">Clockify timer configs</Typography>\n                        <List>\n                          {side.clockify.length ? side.clockify.map((timer, i) => (\n                          <ListItem key={i} divider>\n                            <ListItemText primary={timer.taskDesc} />\n                            <IconButton edge=\"end\" aria-label=\"edit\" onClick={() => handleClockifyTimerEdit(i)}>\n                              <EditIcon />\n                            </IconButton>\n                            <IconButton edge=\"end\" aria-label=\"delete\"  onClick={() => handleClockifyTimerDelete(i)}>\n                              <DeleteIcon />\n                            </IconButton>\n                          </ListItem>)) : \n                          <ListItem key={\"noTimers\"}>\n                            <Typography>No timer configurations added</Typography>\n                          </ListItem>}\n                        </List>\n                        <Button variant=\"outlined\" size=\"large\" onClick={handleClockifyTimerAdd}>Add new timer config</Button>\n                      </Stack>\n                    </CardContent>\n                  </Card>\n                </Stack>\n              </AccordionDetails>\n            </Accordion>)) : \n              <Typography>No sides added</Typography> : \n              <Typography>Loading</Typography>}\n            </CardContent>\n          </Card>\n        </Stack>\n      </TabPanel>\n      <Dialog \n        open={clockifyTimerEditDialogOpen} \n        onClose={handleClockifyTimerDialogClose}\n        PaperProps={{ sx: { overflowY: 'visible' } }}\n        fullWidth\n      >\n        <DialogTitle>{(clockifyTimerEditingId > -1 ? \"Edit\" : \"Create\") + \" timer config\"}</DialogTitle>\n        <DialogContent sx={{overflowY: 'visible' }}>\n          <Stack spacing={1}>  \n            <FormControl fullWidth margin=\"normal\">\n              <InputLabel>API key</InputLabel>\n              <Select\n                size=\"small\"\n                value={selectedApiKey}\n                defaultValue={selectedApiKey}\n                error={badApiKey}\n                label=\"API key\"\n                onChange={handleApiKeySelectChange}\n              >\n                <MenuItem value=\"-\">-</MenuItem>\n                {data ? data.apiKeys.clockify?.map(el => (<MenuItem value={el}>{el}</MenuItem>)) : <p>Loading</p>}\n              </Select>\n            </FormControl>\n            \n            <FormControl fullWidth margin=\"normal\">\n              <InputLabel>Workspace</InputLabel>\n              <Select\n                size=\"small\"\n                value={selectedWorkspace}\n                defaultValue={selectedWorkspace}\n                error={badWorkspace}\n                label=\"Workspace\"\n                onChange={handleWorkspaceSelectChange}\n              >\n                <MenuItem value=\"-\">-</MenuItem>\n                {workspaces.length ? workspaces.map(el => (<MenuItem value={el.id}>{el.name}</MenuItem>)) : <p>Loading</p>}\n              </Select>\n            </FormControl>\n            <FormControl fullWidth margin=\"normal\">\n              <Autocomplete\n                size=\"small\"\n                disablePortal\n                id=\"projectSelector\"\n                disableClearable={true}\n                value={selectedProject}\n                defaultValue={selectedProject}\n                isOptionEqualToValue={(option, value) => option.id === value.id}         \n                options={projects}\n                renderInput={(params) => <TextField {...params} error={badProject} label=\"Project\"/>}\n                limitTags={5}\n                onChange={handleProjectSelectChange}                \n              />\n            </FormControl>\n            <FormControl fullWidth margin=\"normal\">\n              <InputLabel>Task</InputLabel>\n              <Select\n                size=\"small\"\n                value={selectedTask}\n                defaultValue={selectedTask}\n                label=\"Task\"\n                onChange={handleTaskSelectChange}\n              >\n                <MenuItem value=\"-\">-</MenuItem>\n                {tasks.length ? tasks.map(el => (<MenuItem value={el.id}>{el.name}</MenuItem>)) : \"\"}\n              </Select>\n            </FormControl>\n            <FormControl fullWidth margin=\"normal\">\n              <TextField \n                size=\"small\" \n                defaultValue={taskDescription} \n                onChange={(event) => {setTaskDescription(event.target.value)} }\n                error={badDescription}\n                label=\"Description\"\n              />\n            </FormControl>\n          </Stack>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClockifyTimerDialogClose}>Cancel</Button>\n          <Button onClick={handleClockifyTimerDialogSave}>Save</Button>\n        </DialogActions>\n      </Dialog>\n      <Dialog\n        fullScreen={false}\n        open={deleteApiKeyDialogOpen}\n        onClose={handleDeleteApiKeyDialogClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">\n          {\"Delete API key?\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            All side configurations using this API key will be deleted along with the key, are you sure you want to continue?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleDeleteApiKeyDialogClose}>\n            No\n          </Button>\n          <Button onClick={deleteKey} autoFocus>\n            Yes\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Dialog\n        fullScreen={false}\n        open={resetWifiDialogOpen}\n        onClose={handleResetWifiDialogClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">\n          {\"Reset WiFi configuration?\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            All WiFi configration will be deleted and the device will reboot, are you sure you want to continue?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleResetWifiDialogClose}>\n            No\n          </Button>\n          <Button onClick={resetWifi} autoFocus>\n            Yes\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Dialog\n        fullScreen={false}\n        open={factoryResetDialogOpen}\n        onClose={handleFactoryResetDialogClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">\n          {\"Factory reset?\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            All stored configuration (including WiFi) will be deleted and the device will reboot, are you sure you want to continue?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleFactoryResetDialogClose}>\n            No\n          </Button>\n          <Button onClick={factoryReset} autoFocus>\n            Yes\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Container>\n  );\n}\n","import { createTheme } from '@mui/material/styles';\nimport { red } from '@mui/material/colors';\n\n// A custom theme for this app\nconst theme = createTheme({\n  breakpoints: {\n    values: {\n      xs: 0,\n      sm: 650,\n      md: 900,\n      lg: 1200,\n      xl: 1536,\n    },\n  },\n  palette: {\n    mode: 'dark',\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n  },\n  components: {\n    MuiPaper: {\n      styleOverrides: {\n        root: { \n          '& .MuiDialog-paper': {\n            overflowY: 'visible' \n          }\n        }\n      }\n    }\n  }\n});\n\nexport default theme;\n","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { ThemeProvider } from '@mui/material/styles';\nimport App from './App';\nimport theme from './theme';\nimport { SnackbarProvider } from \"notistack\";\nimport Fade from '@mui/material/Fade';\nimport type {ComponentType} from 'react';\n\nlet transition: ComponentType = Fade;\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <SnackbarProvider maxSnack={5} TransitionComponent={transition}>\n      <App />\n    </SnackbarProvider>\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}